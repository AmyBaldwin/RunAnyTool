{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"How to run 'any' Tool This guide describes the quick and easy set up almost any software tool on your server. The tools can easily be removed once analysis is finished to use space efficiently. Set up does not require installing separate dependencies and can be completed in a matter of minutes. To do this we use Containers. Containers are portable and reproducible; they allow the packaging of software and their associated environments (OS, libraries, tools, etc.) within an encapsulated file that can be executed on diverse systems without the need to explicitly port or integrate with the OS, libraries, or environment specific to the host system. Container repositories such as Sylabs.io Container Library , Docker Hub , Singularity Hub and GitHub provide thousands of pre-built Container Images. This guide tells you how to: set up a container on your server, run the software tool(s) inside that container and remove containers that are no longer required. For additional information visit this Software Carpentry site.","title":"Introduction"},{"location":"index.html#how-to-run-any-tool","text":"This guide describes the quick and easy set up almost any software tool on your server. The tools can easily be removed once analysis is finished to use space efficiently. Set up does not require installing separate dependencies and can be completed in a matter of minutes. To do this we use Containers. Containers are portable and reproducible; they allow the packaging of software and their associated environments (OS, libraries, tools, etc.) within an encapsulated file that can be executed on diverse systems without the need to explicitly port or integrate with the OS, libraries, or environment specific to the host system. Container repositories such as Sylabs.io Container Library , Docker Hub , Singularity Hub and GitHub provide thousands of pre-built Container Images. This guide tells you how to: set up a container on your server, run the software tool(s) inside that container and remove containers that are no longer required. For additional information visit this Software Carpentry site.","title":"How to run 'any' Tool"},{"location":"access.html","text":"Logging in Open MobaXterm on your Volac laptop. If MobaXterm isn\u2019t already installed on you Volac laptop call the Volac Service desk on 0845 3511924 or volac.servicedesk@scc.com , and ask them to install it for you. The information can be found here: https://mobaxterm.mobatek.net/ . If you have logged in previously, double click on a User Session. Folders can be found in the side bar to the left. Folders and files can be directly dragged and dropped between your personal computer and the Tool. This Tool is located inside the genome_store folder. Opening a stable connection (recommended) You currently have access to the Tool if you have completed the above section. However, sometimes the network connection between the computer that you are using and the machine where the Tool is located can break. If the Tool is running when the connection breaks, even if the break is only brief, the Tool will stop. You can tell if this has happen because your terminal\u2019s window will freeze; there may also be a partially populated output folder. A terminal multiplexer (tmux) solves this. A terminal multiplexer allows the user to start a session and then detach, so a remote process continues running even when the user is disconnected. It also has the benefit of allowing the user to detach from one computer and reattach using a different computer. To initiate a tmux session in the Appliance terminal window enter: tmux new -s <name> Example This is the code to set up a stable tmux connection named Idris: tmux new -s Idris Tip You can set up multiple tmux sessions; give each one a different name. To detach from a session hold down the Ctrl key and press b , release both keys, then press d . To list existing tmux sessions use tmux ls . To reconnect to an existing session use tmux a -t <name> .","title":"Accessing the server"},{"location":"access.html#logging-in","text":"Open MobaXterm on your Volac laptop. If MobaXterm isn\u2019t already installed on you Volac laptop call the Volac Service desk on 0845 3511924 or volac.servicedesk@scc.com , and ask them to install it for you. The information can be found here: https://mobaxterm.mobatek.net/ . If you have logged in previously, double click on a User Session. Folders can be found in the side bar to the left. Folders and files can be directly dragged and dropped between your personal computer and the Tool. This Tool is located inside the genome_store folder.","title":"Logging in"},{"location":"access.html#opening-a-stable-connection-recommended","text":"You currently have access to the Tool if you have completed the above section. However, sometimes the network connection between the computer that you are using and the machine where the Tool is located can break. If the Tool is running when the connection breaks, even if the break is only brief, the Tool will stop. You can tell if this has happen because your terminal\u2019s window will freeze; there may also be a partially populated output folder. A terminal multiplexer (tmux) solves this. A terminal multiplexer allows the user to start a session and then detach, so a remote process continues running even when the user is disconnected. It also has the benefit of allowing the user to detach from one computer and reattach using a different computer. To initiate a tmux session in the Appliance terminal window enter: tmux new -s <name> Example This is the code to set up a stable tmux connection named Idris: tmux new -s Idris Tip You can set up multiple tmux sessions; give each one a different name. To detach from a session hold down the Ctrl key and press b , release both keys, then press d . To list existing tmux sessions use tmux ls . To reconnect to an existing session use tmux a -t <name> .","title":"Opening a stable connection (recommended)"},{"location":"clear.html","text":"Removing Container Images The Singularity container images can be listed by: singularity cache list -v To remove Singularity container images use: singularity cache clean The Singularity containers used by Nextflow are stored:","title":"Removing old Tools"},{"location":"clear.html#removing-container-images","text":"The Singularity container images can be listed by: singularity cache list -v To remove Singularity container images use: singularity cache clean The Singularity containers used by Nextflow are stored:","title":"Removing Container Images"},{"location":"fetch.html","text":"Pulling a Container Image to your System There are two main Container Platforms: Singularity (soon to be known as Apptainer) and Docker . Singularity has the advantage that it can run both Singularity and Docker containers. Image Registries The first thing you need to do is choose the a container. Biocontainers and StaphB are both a good source of up-to-date and reliable container images for genomic analysis. Container Images can also be found in: Sylabs.io Container Library Docker Hub Singularity Hub (no longer updated) GitHub For example: You can choose the version of the software tool; in the tab named 'tags' the different versions are listed. The Command To pull an image from a URL: singularity pull SOURCE://PATH:TAG Substitute: SOURCE for library , sylabsed , shub or docker PATH for the filepath to the container image and TAG for the version, e.g. latest , or 2.4.5 . The tag is optional. Use ls to check the image has been downloaded. Singularity images are stored as a .sif file. If a Docker image is pulled, it will be converted to a Singularity image. Examples To pull an image called lolcow from the sylabs container registry: singularity pull library://sylabsed/examples/lolcow To pull the latest version of the assembly tool, shovill, from the Docker Hub: singularity pull docker://quay.io/staphb/shovill:latest To pull abricate version 1.0.0 from Docker Hub and convert to Singularity: singularity pull docker://staphb/abricate:1.0.0","title":"Setting up a new Tool"},{"location":"fetch.html#pulling-a-container-image-to-your-system","text":"There are two main Container Platforms: Singularity (soon to be known as Apptainer) and Docker . Singularity has the advantage that it can run both Singularity and Docker containers.","title":"Pulling a Container Image to your System"},{"location":"fetch.html#image-registries","text":"The first thing you need to do is choose the a container. Biocontainers and StaphB are both a good source of up-to-date and reliable container images for genomic analysis. Container Images can also be found in: Sylabs.io Container Library Docker Hub Singularity Hub (no longer updated) GitHub For example: You can choose the version of the software tool; in the tab named 'tags' the different versions are listed.","title":"Image Registries"},{"location":"fetch.html#the-command","text":"To pull an image from a URL: singularity pull SOURCE://PATH:TAG Substitute: SOURCE for library , sylabsed , shub or docker PATH for the filepath to the container image and TAG for the version, e.g. latest , or 2.4.5 . The tag is optional. Use ls to check the image has been downloaded. Singularity images are stored as a .sif file. If a Docker image is pulled, it will be converted to a Singularity image. Examples To pull an image called lolcow from the sylabs container registry: singularity pull library://sylabsed/examples/lolcow To pull the latest version of the assembly tool, shovill, from the Docker Hub: singularity pull docker://quay.io/staphb/shovill:latest To pull abricate version 1.0.0 from Docker Hub and convert to Singularity: singularity pull docker://staphb/abricate:1.0.0","title":"The Command"},{"location":"inside.html","text":"Working inside a container Rather than submitting commands from outside the container, alternatively you can work inside a container. You can start a shell in your container, using the singularity shell command, like so singularity shell lolcow_latest.sif Try running ls By default, Singularity bind mounts the $HOME, /tmp, and $PWD directories within the container at runtime. Tip Your entire HOME directory is bound to Singularity container To exit the container shell use the exit command.","title":"Running a Tool, method 2"},{"location":"inside.html#working-inside-a-container","text":"Rather than submitting commands from outside the container, alternatively you can work inside a container. You can start a shell in your container, using the singularity shell command, like so singularity shell lolcow_latest.sif Try running ls By default, Singularity bind mounts the $HOME, /tmp, and $PWD directories within the container at runtime. Tip Your entire HOME directory is bound to Singularity container To exit the container shell use the exit command.","title":"Working inside a container"},{"location":"outside.html","text":"Running software in a container This command will make a container from the image ( .sif file), run the software, and then colapse the container. The output from the software will be save in your current directory. singularity exec CONTAINER_NAME.sif YOUR_SCRIPT_HERE The first part of the command singularity exec CONTAINER.sif specifies information about the container; the second part of the command ( YOUR_SCRIPT_HERE ) relates to the command you want the software inside the container to execute. Substitute: CONTAINER_NAME for the name of the container you wish to use, and YOUR_SCRIPT_HERE for the full command to execute the tool. By default, Singularity bind mounts the $HOME, /tmp, and $PWD directories within the container at runtime. Example This command executes shovill --check inside a container named shovill_latest.sif . The container image was already present on the local system. singularity exec shovill_latest.sif shovill --check","title":"Running a Tool, method 1"},{"location":"outside.html#running-software-in-a-container","text":"This command will make a container from the image ( .sif file), run the software, and then colapse the container. The output from the software will be save in your current directory. singularity exec CONTAINER_NAME.sif YOUR_SCRIPT_HERE The first part of the command singularity exec CONTAINER.sif specifies information about the container; the second part of the command ( YOUR_SCRIPT_HERE ) relates to the command you want the software inside the container to execute. Substitute: CONTAINER_NAME for the name of the container you wish to use, and YOUR_SCRIPT_HERE for the full command to execute the tool. By default, Singularity bind mounts the $HOME, /tmp, and $PWD directories within the container at runtime. Example This command executes shovill --check inside a container named shovill_latest.sif . The container image was already present on the local system. singularity exec shovill_latest.sif shovill --check","title":"Running software in a container"},{"location":"quick.html","text":"Quick Start Container Images can be found: Biocontainers , StaphB , Sylabs.io Container Library , Docker Hub , Singularity Hub and GitHub . To pull a container use: singularity pull SOURCE://PATH:TAG To run a container use: singularity exec CONTAINER_NAME.sif YOUR_SCRIPT_HERE or: singularity shell CONTAINER_NAME.sif Once inside software commands can be run directly. Use exit . To remove container images: singularity cache clean","title":"Quick start"},{"location":"quick.html#quick-start","text":"Container Images can be found: Biocontainers , StaphB , Sylabs.io Container Library , Docker Hub , Singularity Hub and GitHub . To pull a container use: singularity pull SOURCE://PATH:TAG To run a container use: singularity exec CONTAINER_NAME.sif YOUR_SCRIPT_HERE or: singularity shell CONTAINER_NAME.sif Once inside software commands can be run directly. Use exit . To remove container images: singularity cache clean","title":"Quick Start"},{"location":"troubleshooting.html","text":"Troubleshooting These are some common remedies: It is (usually) safer to copy and paste commands To avoid spellling error use the \u2018tab\u2019 key to auto-complete Do the hyphens or inverted commas need to be re-typed? Are the spaces in the correct place? Is the command prompt in the correct directory (folder)? Is the login connection still active Is the input file named correctly? Never use {} or [] in file names. If these fail, ask for help.","title":"Troubleshooting"},{"location":"troubleshooting.html#troubleshooting","text":"These are some common remedies: It is (usually) safer to copy and paste commands To avoid spellling error use the \u2018tab\u2019 key to auto-complete Do the hyphens or inverted commas need to be re-typed? Are the spaces in the correct place? Is the command prompt in the correct directory (folder)? Is the login connection still active Is the input file named correctly? Never use {} or [] in file names. If these fail, ask for help.","title":"Troubleshooting"}]}