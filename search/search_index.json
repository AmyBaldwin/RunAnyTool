{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"How to run 'any' Tool This guide describes the quick and easy set up almost any software tool on your server. The tools can easily be removed once analysis is finished to use space efficiently. Set up does not require installing separate dependencies and can be completed in a matter of minutes. To do this we use Containers. Containers are portable and reproducible; they allow the packaging of software and their associated environments (OS, libraries, tools, etc.) within an encapsulated file that can be executed on diverse systems without the need to explicitly port or integrate with the OS, libraries, or environment specific to the host system. Container repositories such as Sylabs.io Container Library , Docker Hub , Singularity Hub and GitHub provide thousands of pre-built Container Images. This guide tells you how to: set up a container on your server, run the software tool(s) inside that container and remove containers that are no longer required.","title":"Introduction"},{"location":"index.html#how-to-run-any-tool","text":"This guide describes the quick and easy set up almost any software tool on your server. The tools can easily be removed once analysis is finished to use space efficiently. Set up does not require installing separate dependencies and can be completed in a matter of minutes. To do this we use Containers. Containers are portable and reproducible; they allow the packaging of software and their associated environments (OS, libraries, tools, etc.) within an encapsulated file that can be executed on diverse systems without the need to explicitly port or integrate with the OS, libraries, or environment specific to the host system. Container repositories such as Sylabs.io Container Library , Docker Hub , Singularity Hub and GitHub provide thousands of pre-built Container Images. This guide tells you how to: set up a container on your server, run the software tool(s) inside that container and remove containers that are no longer required.","title":"How to run 'any' Tool"},{"location":"access.html","text":"Logging in Open MobaXterm on your Volac laptop. If MobaXterm isn\u2019t already installed on you Volac laptop call the Volac Service desk on 0845 3511924 or volac.servicedesk@scc.com , and ask them to install it for you. The information can be found here: https://mobaxterm.mobatek.net/ . If you have logged in previously, double click on a User Session. {: style=\"height:300px\" } Folders can be found in the side bar to the left. Folders and files can be directly dragged and dropped between your personal computer and the Tool. This Tool is located inside the genome_store folder. Opening a stable connection (recommended) You currently have access to the Tool if you have completed the above section. However, sometimes the network connection between the computer that you are using and the machine where the Tool is located can break. If the Tool is running when the connection breaks, even if the break is only brief, the Tool will stop. You can tell if this has happen because your terminal\u2019s window will freeze; there may also be a partially populated output folder. A terminal multiplexer (tmux) solves this. A terminal multiplexer allows the user to start a session and then detach, so a remote process continues running even when the user is disconnected. It also has the benefit of allowing the user to detach from one computer and reattach using a different computer. To initiate a tmux session in the Appliance terminal window enter: tmux new -s <name> Example This is the code to set up a stable tmux connection named Idris: tmux new -s Idris Tip You can set up multiple tmux sessions; give each one a different name. To detach from a session hold down the Ctrl key and press b , release both keys, then press d . To list existing tmux sessions use tmux ls . To reconnect to an existing session use tmux a -t <name> .","title":"Accessing the server"},{"location":"access.html#logging-in","text":"Open MobaXterm on your Volac laptop. If MobaXterm isn\u2019t already installed on you Volac laptop call the Volac Service desk on 0845 3511924 or volac.servicedesk@scc.com , and ask them to install it for you. The information can be found here: https://mobaxterm.mobatek.net/ . If you have logged in previously, double click on a User Session. {: style=\"height:300px\" } Folders can be found in the side bar to the left. Folders and files can be directly dragged and dropped between your personal computer and the Tool. This Tool is located inside the genome_store folder.","title":"Logging in"},{"location":"access.html#opening-a-stable-connection-recommended","text":"You currently have access to the Tool if you have completed the above section. However, sometimes the network connection between the computer that you are using and the machine where the Tool is located can break. If the Tool is running when the connection breaks, even if the break is only brief, the Tool will stop. You can tell if this has happen because your terminal\u2019s window will freeze; there may also be a partially populated output folder. A terminal multiplexer (tmux) solves this. A terminal multiplexer allows the user to start a session and then detach, so a remote process continues running even when the user is disconnected. It also has the benefit of allowing the user to detach from one computer and reattach using a different computer. To initiate a tmux session in the Appliance terminal window enter: tmux new -s <name> Example This is the code to set up a stable tmux connection named Idris: tmux new -s Idris Tip You can set up multiple tmux sessions; give each one a different name. To detach from a session hold down the Ctrl key and press b , release both keys, then press d . To list existing tmux sessions use tmux ls . To reconnect to an existing session use tmux a -t <name> .","title":"Opening a stable connection (recommended)"},{"location":"fetch.html","text":"Pulling a Container Image to your system There are two main Container Platforms: Singularity and Docker. Singularity has the advantage that it can run both Singularity and Docker containers. Image registries The first thing you need to do is choose the a container. Biocontainers and StaphB both have up-to-date and reliable containers for genomic analysis. Container Images can also be found in: Sylabs.io Container Library Docker Hub Singularity Hub (no longer updated) GitHub You can choose the version of the software tool. For example, {: style=\"height:300px\" } The Command To pull an image from a URL: singularity pull SOURCE://PATH:TAG Substitute: SOURCE for library , sylabsed , shub or docker PATH for the filepath to the container image and TAG for the version, e.g. latest , or 2.4.5 . The tag is optional. Use ls , ls -a or ll to check the image has been downloaded. Singularity images take the form of a .sif file. Examples To pull an image called lolcow from the sylabs container registry: singularity pull library://sylabsed/examples/lolcow To pull the latest version of the assembly tool, shovill, from the Docker Hub: singularity pull docker://quay.io/staphb/shovill:latest To pull abricate version 1.0.0 from Docker Hub and convert to Singularity: singularity pull docker://staphb/abricate:1.0.0","title":"Setting up a new Tool"},{"location":"fetch.html#pulling-a-container-image-to-your-system","text":"There are two main Container Platforms: Singularity and Docker. Singularity has the advantage that it can run both Singularity and Docker containers.","title":"Pulling a Container Image to your system"},{"location":"fetch.html#image-registries","text":"The first thing you need to do is choose the a container. Biocontainers and StaphB both have up-to-date and reliable containers for genomic analysis. Container Images can also be found in: Sylabs.io Container Library Docker Hub Singularity Hub (no longer updated) GitHub You can choose the version of the software tool. For example, {: style=\"height:300px\" }","title":"Image registries"},{"location":"fetch.html#the-command","text":"To pull an image from a URL: singularity pull SOURCE://PATH:TAG Substitute: SOURCE for library , sylabsed , shub or docker PATH for the filepath to the container image and TAG for the version, e.g. latest , or 2.4.5 . The tag is optional. Use ls , ls -a or ll to check the image has been downloaded. Singularity images take the form of a .sif file. Examples To pull an image called lolcow from the sylabs container registry: singularity pull library://sylabsed/examples/lolcow To pull the latest version of the assembly tool, shovill, from the Docker Hub: singularity pull docker://quay.io/staphb/shovill:latest To pull abricate version 1.0.0 from Docker Hub and convert to Singularity: singularity pull docker://staphb/abricate:1.0.0","title":"The Command"},{"location":"inside.html","text":"Entering a container and running software You can start a shell in your container, using the singularity shell command, like so singularity shell lolcow_latest.sif Try running ls By default, Singularity bind mounts the $HOME, /tmp, and $PWD directories within the container at runtime. Important Your entire HOME directory is bound to Singularity container","title":"Running tools, method 2"},{"location":"inside.html#entering-a-container-and-running-software","text":"You can start a shell in your container, using the singularity shell command, like so singularity shell lolcow_latest.sif Try running ls By default, Singularity bind mounts the $HOME, /tmp, and $PWD directories within the container at runtime. Important Your entire HOME directory is bound to Singularity container","title":"Entering a container and running software"},{"location":"outside.html","text":"Running software in a container from OUTSIDE singularity exec CONTAINER.sif YOUR_SCRIPT_HERE Substitute: CONTAINER.sif for the name of the container you wish to use, and YOUR_SCRIPT_HERE for the full command to execute the tool. By default, Singularity bind mounts the $HOME, /tmp, and $PWD directories within the container at runtime. Example This command executes shovill --check inside a container. The container has been pulled to the local server and is named shovill_latest.sif singularity exec shovill_latest.sif shovill --check","title":"Running tools, method 1"},{"location":"outside.html#running-software-in-a-container-from-outside","text":"singularity exec CONTAINER.sif YOUR_SCRIPT_HERE Substitute: CONTAINER.sif for the name of the container you wish to use, and YOUR_SCRIPT_HERE for the full command to execute the tool. By default, Singularity bind mounts the $HOME, /tmp, and $PWD directories within the container at runtime. Example This command executes shovill --check inside a container. The container has been pulled to the local server and is named shovill_latest.sif singularity exec shovill_latest.sif shovill --check","title":"Running software in a container from OUTSIDE"},{"location":"quick.html","text":"","title":"Quick start"}]}